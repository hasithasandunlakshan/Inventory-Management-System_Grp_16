# Spring Boot Kafka Configuration Template
# Replace KAFKA_SERVER_IP with your actual Kafka VM external IP

# ===========================================
# KAFKA CONFIGURATION FOR CLOUD DEPLOYMENT
# ===========================================

# Core Kafka Configuration
spring.kafka.bootstrap-servers=KAFKA_SERVER_IP:9092

# Producer Configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.enable-idempotence=true
spring.kafka.producer.properties.spring.json.use.type.headers=false

# Consumer Configuration - Order Service
spring.kafka.consumer.group-id=order-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.type.mapping=InventoryReservationRequestEvent:com.Orderservice.Orderservice.events.InventoryReservationRequestEvent,InventoryReservationResponseEvent:com.Orderservice.Orderservice.events.InventoryReservationResponseEvent

# Connection and Security Settings
spring.kafka.client-id=${spring.application.name}
spring.kafka.properties.security.protocol=PLAINTEXT
spring.kafka.properties.request.timeout.ms=30000
spring.kafka.properties.session.timeout.ms=30000

# Performance Tuning
spring.kafka.producer.batch-size=16384
spring.kafka.producer.linger-ms=5
spring.kafka.producer.buffer-memory=33554432
spring.kafka.consumer.max-poll-records=500
spring.kafka.consumer.fetch-min-size=1
spring.kafka.consumer.fetch-max-wait=500

# ===========================================
# SERVICE-SPECIFIC CONFIGURATIONS
# ===========================================

# For Product Service (Consumer Group: product-service-group)
# spring.kafka.consumer.group-id=product-service-group

# For Notification Service (Consumer Group: notification-service-group)
# spring.kafka.consumer.group-id=notification-service-group

# For User Service (Consumer Group: userservice-group)
# spring.kafka.consumer.group-id=userservice-group

# For Resource Service (no specific consumer, only producer)
# spring.kafka.consumer.group-id=resource-service-group

# ===========================================
# ENVIRONMENT-SPECIFIC OVERRIDES
# ===========================================

# Development Environment
# spring.kafka.bootstrap-servers=localhost:9092

# Production Environment (Google Cloud VM)
# spring.kafka.bootstrap-servers=KAFKA_SERVER_IP:9092

# ===========================================
# TOPIC NAMING CONVENTION
# ===========================================
# inventory-reservation-request    - Order Service → Product Service
# inventory-reservation-response   - Product Service → Order Service  
# order-notifications             - Order Service → Notification Service
# driver-profile-created-events   - Resource Service → User Service
# inventory-notifications         - Product Service → Notification Service
# payment-notifications          - Order Service → Notification Service