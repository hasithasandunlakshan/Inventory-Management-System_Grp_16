name: Product Service CI

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/productservice/**'
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/productservice/**'

jobs:
  # Single Comprehensive Job
  ci:
    name: Product Service CI Pipeline
    runs-on: ubuntu-latest
    steps:
      # Setup Steps
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      # Validation Steps
      - name: Validate POM
        run: |
          cd backend/productservice
          mvn validate

      - name: Compile Code
        run: |
          cd backend/productservice
          mvn compile

      # Testing Steps
      - name: Run Unit Tests
        run: |
          cd backend/productservice
          # Run unit tests (service, controller, exception, dto tests)
          mvn test -Dtest="*ServiceTest,*ControllerTest,*ExceptionTest,*DTOConversionTest"

      - name: Run Integration Tests
        run: |
          cd backend/productservice
          # Run integration tests (repository and full integration tests)
          mvn test -Dtest="*IntegrationTest,*RepositoryTest"

      # # Code Quality Steps
      # - name: Run Checkstyle
      #   run: |
      #     cd backend/productservice
      #     mvn checkstyle:check

      # - name: Generate Test Coverage Report
      #   run: |
      #     cd backend/productservice
      #     mvn jacoco:report

      # Build Steps
      - name: Build JAR Package
        run: |
          cd backend/productservice
          mvn clean package -DskipTests

      # Upload Artifacts
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            backend/productservice/target/surefire-reports/
            backend/productservice/target/site/

      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: product-service-jar
          path: backend/productservice/target/*.jar

      # Summary Step
      - name: Generate CI Summary
        if: always()
        run: |
          echo "## Product Service CI Pipeline Summary" >> $GITHUB_STEP_SUMMARY
          echo "### âœ… Completed Steps:" >> $GITHUB_STEP_SUMMARY
          echo "- Code Validation" >> $GITHUB_STEP_SUMMARY
          echo "- Code Compilation" >> $GITHUB_STEP_SUMMARY
          echo "- Unit Tests" >> $GITHUB_STEP_SUMMARY
          echo "- Integration Tests" >> $GITHUB_STEP_SUMMARY
          echo "- Code Quality Checks" >> $GITHUB_STEP_SUMMARY
          echo "- JAR Build" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ“¦ Artifacts:" >> $GITHUB_STEP_SUMMARY
          echo "- Test Results" >> $GITHUB_STEP_SUMMARY
          echo "- JAR Package" >> $GITHUB_STEP_SUMMARY
