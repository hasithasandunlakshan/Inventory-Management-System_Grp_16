# Add this line if it doesn't exist, or update the existing server.port property
spring.application.name=productservice
server.port=8083
spring.datasource.url=jdbc:mysql://avnadmin:AVNS_Ipqzq0kuyRjWpAdm_pc@mysql-38838f7f-sem5-project.f.aivencloud.com:27040/InventoryManagement?ssl-mode=REQUIRED
spring.datasource.username=avnadmin
spring.datasource.password=AVNS_Ipqzq0kuyRjWpAdm_pc
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Kafka Configuration (Cloud Deployment)
spring.kafka.bootstrap-servers=34.16.102.169:9092
spring.kafka.consumer.group-id=product-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.type.mapping=InventoryReservationRequestEvent:com.example.productservice.events.InventoryReservationRequestEvent,InventoryReservationResponseEvent:com.example.productservice.events.InventoryReservationResponseEvent

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.enable-idempotence=true
spring.kafka.producer.properties.spring.json.use.type.headers=false
spring.kafka.producer.properties.spring.json.type.mapping=InventoryReservationRequestEvent:com.example.productservice.events.InventoryReservationRequestEvent,InventoryReservationResponseEvent:com.example.productservice.events.InventoryReservationResponseEvent

# For Confluent Cloud, uncomment and configure these:
# spring.kafka.bootstrap-servers=<YOUR_CONFLUENT_CLOUD_BOOTSTRAP_SERVERS>
# spring.kafka.properties.security.protocol=SASL_SSL
# spring.kafka.properties.sasl.mechanism=PLAIN
# spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="<YOUR_API_KEY>" password="<YOUR_API_SECRET>";

cloudinary.cloud-name=dqybdjbo3
cloudinary.api-key=548459946194297
cloudinary.api-secret=WaFtnegv-T5tktigyPvDguJG59w

